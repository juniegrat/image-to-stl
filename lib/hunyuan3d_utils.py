#!/usr/bin/env python3
"""
Utilitaires de compatibilit√© pour Hunyuan3D-2mv (version modulaire)
Fournit des fonctions de compatibilit√© pour l'ancien code qui utilise les utilitaires
Ce module fait maintenant le pont vers les nouveaux modules sp√©cialis√©s
"""

import warnings
from typing import List, Optional, Dict, Any, Union
from PIL import Image
import trimesh

# Import des nouveaux modules sp√©cialis√©s
try:
    # Import relatif
    from .hunyuan3d_camera import (
        get_ray_directions,
        get_rays,
        get_spherical_cameras
    )
    from .hunyuan3d_rendering import save_video
    from .hunyuan3d_mesh_processing import (
        normalize_mesh,
        to_gradio_3d_orientation,
        debug_mesh_properties
    )
    from .hunyuan3d_image_processing import (
        remove_background_from_image as remove_background,
        get_image_processor
    )
    from .hunyuan3d_rendering import (
        render_mesh_view,
        get_renderer
    )
except ImportError:
    # Import absolu
    from hunyuan3d_camera import (
        get_ray_directions,
        get_rays,
        get_spherical_cameras
    )
    from hunyuan3d_rendering import save_video
    from hunyuan3d_mesh_processing import (
        normalize_mesh,
        to_gradio_3d_orientation,
        debug_mesh_properties
    )
    from hunyuan3d_image_processing import (
        remove_background_from_image as remove_background,
        get_image_processor
    )
    from hunyuan3d_rendering import (
        render_mesh_view,
        get_renderer
    )

# Supprimer les warnings de d√©pr√©ciation pour ce module de compatibilit√©
warnings.filterwarnings("ignore", category=DeprecationWarning)


def resize_foreground(image: Image.Image, ratio: float) -> Image.Image:
    """
    Fonction de compatibilit√© pour resize_foreground

    Args:
        image: PIL Image with alpha channel (RGBA)
        ratio: Desired ratio of foreground to image size

    Returns:
        Resized image with foreground at specified ratio
    """
    warnings.warn(
        "resize_foreground depuis hunyuan3d_utils est d√©pr√©ci√©e. "
        "Utilisez hunyuan3d_image_processing.ImageProcessor.resize_foreground",
        DeprecationWarning,
        stacklevel=2
    )

    processor = get_image_processor()
    return processor.resize_foreground(image, ratio)


def use_generated_video_if_available(output_dir: str) -> Optional[str]:
    """
    Fonction de compatibilit√© pour use_generated_video_if_available

    Args:
        output_dir: R√©pertoire de sortie

    Returns:
        Chemin vers la vid√©o existante ou None
    """
    warnings.warn(
        "use_generated_video_if_available depuis hunyuan3d_utils est d√©pr√©ci√©e. "
        "Utilisez hunyuan3d_rendering.Renderer3D.copy_existing_assets",
        DeprecationWarning,
        stacklevel=2
    )

    renderer = get_renderer()
    return renderer.copy_existing_assets(output_dir)


def copy_generated_renders(output_dir: str, n_views: int = 30) -> List[str]:
    """
    Fonction de compatibilit√© pour copy_generated_renders

    Args:
        output_dir: R√©pertoire de sortie
        n_views: Nombre de vues √† copier

    Returns:
        Liste des chemins vers les images copi√©es
    """
    warnings.warn(
        "copy_generated_renders depuis hunyuan3d_utils est d√©pr√©ci√©e. "
        "Utilisez hunyuan3d_rendering.Renderer3D.copy_existing_assets",
        DeprecationWarning,
        stacklevel=2
    )

    renderer = get_renderer()
    renderer.copy_existing_assets(output_dir, n_views)

    # Retourner une liste vide pour compatibilit√©
    # (la nouvelle fonction ne retourne que le chemin vid√©o)
    return []


def get_hunyuan3d_info():
    """
    Fonction de compatibilit√© pour get_hunyuan3d_info

    Returns:
        Informations sur Hunyuan3D modulaire
    """
    warnings.warn(
        "get_hunyuan3d_info depuis hunyuan3d_utils est d√©pr√©ci√©e. "
        "Utilisez hunyuan3d_converter.get_hunyuan3d_info",
        DeprecationWarning,
        stacklevel=2
    )

    return {
        'name': 'Hunyuan3D-2mv (Modulaire - Compatibilit√©)',
        'description': 'Module de compatibilit√© vers la nouvelle architecture modulaire',
        'version': '3.0-compat',
        'status': 'D√âPR√âCI√â - Utilisez les nouveaux modules sp√©cialis√©s',
        'migration': {
            'camera': 'hunyuan3d_camera',
            'rendering': 'hunyuan3d_rendering',
            'mesh_processing': 'hunyuan3d_mesh_processing',
            'image_processing': 'hunyuan3d_image_processing',
            'models': 'hunyuan3d_models',
            'config': 'hunyuan3d_config'
        },
        'deprecated_functions': [
            'resize_foreground ‚Üí hunyuan3d_image_processing.ImageProcessor.resize_foreground',
            'use_generated_video_if_available ‚Üí hunyuan3d_rendering.Renderer3D.copy_existing_assets',
            'copy_generated_renders ‚Üí hunyuan3d_rendering.Renderer3D.copy_existing_assets',
            'get_hunyuan3d_info ‚Üí hunyuan3d_converter.get_hunyuan3d_info'
        ],
        'active_functions': [
            'get_ray_directions ‚Üí hunyuan3d_camera.get_ray_directions',
            'get_rays ‚Üí hunyuan3d_camera.get_rays',
            'get_spherical_cameras ‚Üí hunyuan3d_camera.get_spherical_cameras',
            'save_video ‚Üí hunyuan3d_rendering.save_video',
            'normalize_mesh ‚Üí hunyuan3d_mesh_processing.normalize_mesh',
            'to_gradio_3d_orientation ‚Üí hunyuan3d_mesh_processing.to_gradio_3d_orientation',
            'debug_mesh_properties ‚Üí hunyuan3d_mesh_processing.debug_mesh_properties',
            'remove_background ‚Üí hunyuan3d_image_processing.remove_background_from_image',
            'render_mesh_view ‚Üí hunyuan3d_rendering.render_mesh_view'
        ]
    }


# Fonctions re-export√©es depuis les nouveaux modules (sans d√©pr√©ciation)
# Ces fonctions sont directement import√©es depuis les modules sp√©cialis√©s

# Camera utilities (depuis hunyuan3d_camera)
__all__ = [
    'get_ray_directions',
    'get_rays',
    'get_spherical_cameras',

    # Rendering utilities (depuis hunyuan3d_rendering)
    'save_video',
    'render_mesh_view',

    # Mesh processing utilities (depuis hunyuan3d_mesh_processing)
    'normalize_mesh',
    'to_gradio_3d_orientation',
    'debug_mesh_properties',

    # Image processing utilities (depuis hunyuan3d_image_processing)
    'remove_background',

    # Fonctions de compatibilit√© (d√©pr√©ci√©es)
    'resize_foreground',
    'use_generated_video_if_available',
    'copy_generated_renders',
    'get_hunyuan3d_info'
]


def print_migration_guide():
    """Affiche un guide de migration vers les nouveaux modules"""
    print("üìã Guide de migration Hunyuan3D-2mv vers architecture modulaire")
    print("=" * 70)
    print()
    print("üèóÔ∏è  NOUVELLE ARCHITECTURE:")
    print("   ‚Ä¢ hunyuan3d_config.py      - Configuration et modes de qualit√©")
    print("   ‚Ä¢ hunyuan3d_models.py      - Gestion des mod√®les et pipelines")
    print("   ‚Ä¢ hunyuan3d_camera.py      - Utilitaires de cam√©ra et rayons")
    print("   ‚Ä¢ hunyuan3d_rendering.py   - Rendu 3D et g√©n√©ration vid√©os")
    print("   ‚Ä¢ hunyuan3d_mesh_processing.py - Traitement et optimisation mesh")
    print("   ‚Ä¢ hunyuan3d_image_processing.py - Traitement d'images")
    print()
    print("üîÑ MIGRATIONS PRINCIPALES:")
    print("   ANCIEN: from hunyuan3d_utils import normalize_mesh")
    print("   NOUVEAU: from hunyuan3d_mesh_processing import normalize_mesh")
    print()
    print("   ANCIEN: from hunyuan3d_utils import render_mesh_view")
    print("   NOUVEAU: from hunyuan3d_rendering import render_mesh_view")
    print()
    print("   ANCIEN: from hunyuan3d_utils import remove_background")
    print("   NOUVEAU: from hunyuan3d_image_processing import remove_background_from_image")
    print()
    print("üí° Vous pouvez continuer √† utiliser hunyuan3d_utils (avec warnings)")
    print("   mais nous recommandons de migrer vers les nouveaux modules")
    print()
    print("üìñ Documentation compl√®te: voir les docstrings des nouveaux modules")


if __name__ == "__main__":
    print_migration_guide()
